name: Deploy Stack

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment (staging or prod)"
        required: true
        default: staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout student repo
        uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          python3 -m pip install --upgrade pip
          pip install ansible

      - name: Write vault.yml for environment
        run: |
          mkdir -p ansible/group_vars/${{ github.event.inputs.environment }}
          if [ "${{ github.event.inputs.environment }}" = "prod" ]; then
            echo "${{ secrets.VAULT_PROD }}" > ansible/group_vars/prod/vault.yml
          elif [ "${{ github.event.inputs.environment }}" = "staging" ]; then
            echo "${{ secrets.VAULT_STAGING }}" > ansible/group_vars/staging/vault.yml
          fi

      - name: Clone core infra
        run: |
          git clone https://github.com/codeworks-templates/postgres-core.git core-template
      
      - name: Inject student overrides into core
        run: |
          cp -r ansible/templates core-template/ansible/
          cp -r ansible/group_vars core-template/ansible/

      - name: Create inventory.ini dynamically
        run: |
          echo "[${{ github.event.inputs.environment }}]" > inventory.ini
          if [ "${{ github.event.inputs.environment }}" = "prod" ]; then
            echo "target ansible_host=${{ secrets.PROD_HOST }} ansible_user=${{ secrets.SSH_USER }}" >> inventory.ini
          elif [ "${{ github.event.inputs.environment }}" = "staging" ]; then
            echo "target ansible_host=${{ secrets.STAGING_HOST }} ansible_user=${{ secrets.SSH_USER }}" >> inventory.ini
          fi

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Disable SSH host key checking
        run: echo "StrictHostKeyChecking=no" >> ~/.ssh/config

      - name: Run Ansible Playbook
        run: ansible-playbook -i inventory.ini core-template/ansible/playbook.yml --extra-vars "deploy_env=${{ github.event.inputs.environment }}"



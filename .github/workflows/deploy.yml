name: Deploy Stack

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment (staging or prod)"
        required: true
        default: staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout student repo
        uses: actions/checkout@v4

      - name: Set HOST_IP variable
        id: vars
        run: |
          if [ "${{ github.event.inputs.environment }}" = "prod" ]; then
            echo "HOST_IP=${{ secrets.PROD_HOST }}" >> $GITHUB_ENV
            echo "VAULT=${{ secrets.VAULT_PROD }}" >> $GITHUB_ENV
          else
            echo "HOST_IP=${{ secrets.STAGING_HOST }}" >> $GITHUB_ENV
            echo "VAULT=${{ secrets.VAULT_STAGING }}" >> $GITHUB_ENV
          fi

      - name: Install Ansible
        run: |
          python3 -m pip install --upgrade pip
          pip install ansible

      - name: Write vault.yml for environment
        run: |
          mkdir -p ansible/group_vars/${{ github.event.inputs.environment }}
          echo "$VAULT" > ansible/group_vars/${{ github.event.inputs.environment }}/vault.yml

      - name: Clone core infra
        run: git clone https://github.com/codeworks-templates/postgres-core.git core-template
      
      - name: Inject student templates + vault into core
        run: |
          mkdir -p core-template/ansible/templates
          mkdir -p core-template/ansible/group_vars
          cp -r ansible/templates/* core-template/ansible/templates/
          cp -r ansible/group_vars/* core-template/ansible/group_vars/

      - name: Create inventory.ini dynamically
        run: |
          echo "[${{ github.event.inputs.environment }}]" > inventory.ini
          echo "target ansible_host=$HOST_IP ansible_user=${{ secrets.SSH_USER }}" >> inventory.ini

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Disable SSH host key checking
        run: echo "StrictHostKeyChecking=no" >> ~/.ssh/config

      - name: Upload stack to remote server
        run: |
          REPO_NAME=$(basename $GITHUB_REPOSITORY)
          scp -r core-template/* ${{ secrets.SSH_USER }}@$HOST_IP:/home/${{ secrets.SSH_USER }}/$REPO_NAME/

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i inventory.ini core-template/ansible/playbook.yml --extra-vars "deploy_env=${{ github.event.inputs.environment }}"
